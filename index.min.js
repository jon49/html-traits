(()=>{var o=new Map;function b(t,e){if(t=t.trim(),t==="")throw new Error("Trait name cannot be empty");if(o.has(t))throw new Error(`Trait "${t}" already defined`);o.set(t,e)}var a=new WeakMap;function s(t){var e=t.getAttribute("traits");if(e){var r=a.get(t)||[];for(let i of e.split(/\s+/))if(o.has(i)){var f=r.some(function(l){return l.constructor===o.get(i)});if(!f){var c=new(o.get(i))(t);r.push(c)}}r.length&&a.set(t,r)}}function v(t,e,r){var f=e?e.split(/\s+/):[],c=r?r.split(/\s+/):[],i=f.filter(n=>!c.includes(n));if(i.length>0){var l=a.get(t)||[],u=[];for(let n of l){var h=p(n);i.includes(h)?typeof n.disconnectedCallback=="function"&&n.disconnectedCallback():u.push(n)}u.length>0?a.set(t,u):a.delete(t)}r&&s(t)}function p(t){for(let[e,r]of o)if(t.constructor===r)return e;return null}function g(t){t.hasAttribute?.("traits")&&d(t);for(let e of t.querySelectorAll?.("[traits]")??[])d(e)}function d(t){var e=a.get(t);for(let r of e??[])typeof r.disconnectedCallback=="function"&&r.disconnectedCallback();a.delete(t)}var y=new MutationObserver(function(t){for(let e of t){e.type==="attributes"&&e.attributeName==="traits"&&v(e.target,e.oldValue,e.target.getAttribute("traits"));for(let r of Array.from(e.addedNodes))r.nodeType===1&&r.hasAttribute?.("traits")&&s(r),r.querySelectorAll?.("[traits]").forEach(s);Array.from(e.removedNodes).forEach(g)}});document.addEventListener("DOMContentLoaded",function(){document.querySelectorAll("[traits]").forEach(s)});y.observe(document,{childList:!0,subtree:!0,attributes:!0,attributeOldValue:!0,attributeFilter:["traits"]});window.defineTrait=b;})();
